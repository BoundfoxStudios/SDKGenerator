var PlayFabClientSDK = new function(){
	
	var internalSettings = {
		session_ticket: null,
		sdk_version: "1.1.0",
		api_version: "1.1.0",
		production_environment_url: ".playfabapi.com"
	}

    var getServerUrl = function () {
        return "https://" + PlayFabClientSDK.settings.title_id + internalSettings.production_environment_url;
    }

     var getLogicServerUrl = function () {
        throw "Not Implemented!";
    }

    var executeRequest = function (url, data, callback) {
		if(callback != null && typeof (callback) != "function"){
			throw "Callback must be null of a function";
		}
	
        if (data == null){
            data = {};
		}
		
		var startTime = new Date();
		
		var requestBody = JSON.stringify(data);
		
        var xhr = new XMLHttpRequest();
        xhr.open("POST", getServerUrl() + url, true);

        xhr.setRequestHeader('Content-Type', 'application/json');

        if (internalSettings.session_ticket != null) {
            xhr.setRequestHeader("X-Authorization", internalSettings.session_ticket);
        }

        xhr.setRequestHeader('X-PlayFabSDK', "JavaScriptSDK-" + internalSettings.sdk_version + "-" + internalSettings.api_version);

        xhr.onloadend = function () {
            if (callback != null) {
				var result = JSON.parse(xhr.responseText);
				
				result.CallBackTimeMS = new Date() - startTime;
				
                callback(result);
            }
        }

        xhr.onerror = function () {
            if (callback != null) {
                var result = JSON.parse(xhr.responseText);
				
				result.CallBackTimeMS = new Date() - startTime;
				
                callback(result);
            }
        }

        xhr.send(requestBody);
    }
	
	return {
	    settings: {
			title_id: null,
		},
	
	<% for(var a in apis){ var api = apis[a];  var apiName = api.name.toLowerCase();  if( api.name==="Client"){ %><% for(var i in api.calls) { var apiCall = api.calls[i]; %>
	<%- apiCall.name %>: function(request, callback)
	{
		<%- getRequestActions(apiCall, api) %>
		
		<% if(apiCall.result == "LoginResult" || apiCall.result == "RegisterPlayFabUserResult"){ %>
		var overloadCallback = function(result){
			<%- getResultActions(apiCall, api) %>
			if (callback != null && typeof (callback) == "function") {
				callback(result);
			}
		};
		
		executeRequest("<%- apiCall.url %>", request, overloadCallback);<% }else{ %>executeRequest("<%- apiCall.url %>", request, callback);<% } %>
	},
	<% } %><% } %><% } %>
	}
}();